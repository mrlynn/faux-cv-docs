"use strict";(self.webpackChunkfaux_cv_docs=self.webpackChunkfaux_cv_docs||[]).push([[624],{8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var s=r(6540);const t={},a=s.createContext(t);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(a.Provider,{value:n},e.children)}},9362:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"api","title":"API Reference","description":"Faux-CV provides a simple yet powerful API for generating resumes programmatically. This guide covers all available functions, options, and return types.","source":"@site/docs/api.md","sourceDirName":".","slug":"/api","permalink":"/faux-cv-docs/docs/api","draft":false,"unlisted":false,"editUrl":"https://github.com/faux-cv/faux-cv/tree/main/docs/docs/api.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"CLI Reference","permalink":"/faux-cv-docs/docs/cli"},"next":{"title":"Templates","permalink":"/faux-cv-docs/docs/templates"}}');var t=r(4848),a=r(8453);const i={sidebar_position:3},l="API Reference",o={},c=[{value:"Main Functions",id:"main-functions",level:2},{value:"generateResume",id:"generateresume",level:3},{value:"Options",id:"options",level:4},{value:"Return Value",id:"return-value",level:4},{value:"generateBatchResumes",id:"generatebatchresumes",level:3},{value:"Options",id:"options-1",level:4},{value:"Return Value",id:"return-value-1",level:4},{value:"Examples",id:"examples",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Multiple Formats",id:"multiple-formats",level:3},{value:"Custom PDF Generation",id:"custom-pdf-generation",level:3},{value:"Batch Generation",id:"batch-generation",level:3},{value:"Using Custom Templates",id:"using-custom-templates",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Error Types",id:"error-types",level:2},{value:"See Also",id:"see-also",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"api-reference",children:"API Reference"})}),"\n",(0,t.jsx)(n.p,{children:"Faux-CV provides a simple yet powerful API for generating resumes programmatically. This guide covers all available functions, options, and return types."}),"\n",(0,t.jsx)(n.h2,{id:"main-functions",children:"Main Functions"}),"\n",(0,t.jsx)(n.h3,{id:"generateresume",children:"generateResume"}),"\n",(0,t.jsx)(n.p,{children:"The primary function for generating resumes."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"async function generateResume(options: ResumeOptions): Promise<ResumeOutput>\n"})}),"\n",(0,t.jsx)(n.h4,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"interface ResumeOptions {\n  industry?: string;          // Industry specialization (default: 'tech')\n  experienceYears?: number;   // Years of experience (default: 5)\n  format?: string;           // Output format: 'markdown' | 'json' | 'pdf' | 'both' (default: 'markdown')\n  gender?: string;           // 'male' | 'female' (default: random)\n  includeLinkedin?: boolean; // Include LinkedIn profile (default: true)\n  includeWebsite?: boolean;  // Include personal website (default: true)\n  template?: string;         // Custom Mustache template path\n  pdfStyle?: string;        // 'default' | 'modern' | 'minimal' | 'professional'\n  pdfColor?: string;        // Primary color for PDF (hex code)\n  seed?: number;            // Random seed for consistent generation\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"interface ResumeOutput {\n  markdown?: string;        // Markdown formatted resume\n  json?: object;           // Resume data as JSON\n  pdf?: Buffer;            // PDF buffer (if PDF format selected)\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"generatebatchresumes",children:"generateBatchResumes"}),"\n",(0,t.jsx)(n.p,{children:"Generate multiple resumes at once."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"async function generateBatchResumes(\n  options: BatchResumeOptions\n): Promise<BatchResumeOutput>\n"})}),"\n",(0,t.jsx)(n.h4,{id:"options-1",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"interface BatchResumeOptions extends ResumeOptions {\n  count: number;           // Number of resumes to generate\n  combinePdf?: boolean;    // Combine all PDFs into one file\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"return-value-1",children:"Return Value"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"interface BatchResumeOutput {\n  resumes: ResumeOutput[];\n  combinedPdf?: Buffer;    // Combined PDF buffer (if combinePdf is true)\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const { generateResume } = require('faux-cv');\n\n// Generate a basic tech resume\nconst resume = await generateResume({\n  industry: 'tech',\n  experienceYears: 5\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"multiple-formats",children:"Multiple Formats"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const resume = await generateResume({\n  industry: 'marketing',\n  experienceYears: 8,\n  format: 'both'\n});\n\nconsole.log(resume.markdown);\nconsole.log(resume.json);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"custom-pdf-generation",children:"Custom PDF Generation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const resume = await generateResume({\n  format: 'pdf',\n  pdfStyle: 'modern',\n  pdfColor: '#4a90e2'\n});\n\nfs.writeFileSync('resume.pdf', resume.pdf);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"batch-generation",children:"Batch Generation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const { generateBatchResumes } = require('faux-cv');\n\nconst batch = await generateBatchResumes({\n  count: 5,\n  industry: 'tech',\n  format: 'pdf',\n  combinePdf: true\n});\n\nfs.writeFileSync('resumes.pdf', batch.combinedPdf);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"using-custom-templates",children:"Using Custom Templates"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const resume = await generateResume({\n  template: './templates/custom.mustache',\n  format: 'markdown'\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"try {\n  const resume = await generateResume({\n    industry: 'tech',\n    format: 'pdf'\n  });\n} catch (error) {\n  if (error instanceof ValidationError) {\n    console.error('Invalid options:', error.message);\n  } else if (error instanceof TemplateError) {\n    console.error('Template error:', error.message);\n  } else {\n    console.error('Unexpected error:', error);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"error-types",children:"Error Types"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Error Class"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ValidationError"})}),(0,t.jsx)(n.td,{children:"Invalid options provided"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"TemplateError"})}),(0,t.jsx)(n.td,{children:"Error in template processing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"PDFGenerationError"})}),(0,t.jsx)(n.td,{children:"Error generating PDF"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FileSystemError"})}),(0,t.jsx)(n.td,{children:"Error reading/writing files"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./cli",children:"CLI Reference"})," - Command line interface"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./templates",children:"Templates"})," - Template customization"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./examples",children:"Examples"})," - More usage examples"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);